<div class="container">
    <div class="dashboard">
        <!-- Header, Stats, and Actions -->
        <div class="dashboard-header">
            <h1>Welcome back, <%= user.firstName %>!</h1>
            <p>Here's your travel overview and quick actions</p>
        </div>
        <div class="dashboard-stats">
            <div class="stat-card"><div id="itinerary-count" class="stat-number">...</div><div class="stat-label">Itineraries</div></div>
            <div class="stat-card"><div id="booking-count" class="stat-number">...</div><div class="stat-label">Bookings</div></div>
            <div class="stat-card"><div id="total-spent" class="stat-number">...</div><div class="stat-label">Total Spent</div></div>
            <div class="stat-card"><div id="upcoming-trips" class="stat-number">...</div><div class="stat-label">Upcoming Trips</div></div>
        </div>
        <div class="dashboard-actions">
            <a href="/itinerary/create" class="btn btn-primary"><i class="fas fa-plus"></i> Create Itinerary</a>
            <a href="/booking/create" class="btn btn-outline"><i class="fas fa-calendar-plus"></i> Add Booking</a>
        </div>

        <!-- Main Content Area -->
        <div class="dashboard-content">
            <div class="dashboard-grid">
                <div class="dashboard-section"><h2>Recent Itineraries</h2><div id="recent-itineraries" class="list-container"></div></div>
                <div class="dashboard-section"><h2>Recent Bookings</h2><div id="recent-bookings" class="list-container"></div></div>
            </div>

            <!-- AI ASSISTANT SECTION -->
            <div class="dashboard-section">
                <h2>AI Travel Assistant</h2>
                <div class="ai-assistant-grid">
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-robot"></i><h3>Smart Recommendations</h3></div>
                        <div class="ai-content">
                            <p>Get personalized trip ideas based on your travel style.</p>
                            <button class="btn btn-primary" onclick="getRecommendations()"><i class="fas fa-magic"></i> Get Suggestions</button>
                        </div>
                    </div>
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-chart-line"></i><h3>Cost Predictions</h3></div>
                        <div class="ai-content">
                            <p>Estimate the cost of a trip.</p>
                            <input type="text" id="cost-destination" class="form-control" placeholder="Destination, e.g., Tokyo">
                            <input type="number" id="cost-duration" class="form-control" placeholder="Duration (days)">
                            <button class="btn btn-primary" onclick="predictCosts()"><i class="fas fa-calculator"></i> Predict Costs</button>
                        </div>
                    </div>
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-cloud-sun"></i><h3>Weather Insights</h3></div>
                        <div class="ai-content">
                            <p>Get forecasts for your destination.</p>
                            <input type="text" id="weather-destination" class="form-control" placeholder="Destination, e.g., Paris">
                            <input type="date" id="weather-date" class="form-control">
                            <button class="btn btn-primary" onclick="getWeather()"><i class="fas fa-search"></i> Get Insights</button>
                        </div>
                    </div>
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-language"></i><h3>Translation Service</h3></div>
                        <div class="ai-content">
                            <p>Translate text for your travels.</p>
                            <textarea id="translate-text" class="form-control" rows="3" placeholder="Enter text..."></textarea>
                            <select id="translate-language" class="form-control">
                                <option value="spanish">Spanish</option>
                                <option value="french">French</option>
                                <option value="german">German</option>
                                <option value="japanese">Japanese</option>
                            </select>
                            <button class="btn btn-primary" onclick="translateText()"><i class="fas fa-globe-americas"></i> Translate</button>
                        </div>
                    </div>
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-piggy-bank"></i><h3>Budget Optimizer</h3></div>
                        <div class="ai-content">
                            <p>Get a smart breakdown of how to allocate your travel budget.</p>
                            <input type="number" id="budget-total" class="form-control" placeholder="Total Budget ($)">
                            <input type="text" id="budget-destination" class="form-control" placeholder="Destination">
                            <input type="number" id="budget-duration" class="form-control" placeholder="Duration (days)">
                            <button class="btn btn-primary" onclick="optimizeBudget()"><i class="fas fa-balance-scale"></i> Optimize</button>
                        </div>
                    </div>
                    <div class="ai-card">
                        <div class="ai-header"><i class="fas fa-lightbulb"></i><h3>Travel Tips</h3></div>
                        <div class="ai-content">
                            <p>Generate personalized travel tips for your destination.</p>
                            <input type="text" id="tips-destination" class="form-control" placeholder="Destination">
                            <select id="tips-style" class="form-control">
                                <option value="balanced">Balanced</option>
                                <option value="budget">Budget</option>
                                <option value="luxury">Luxury</option>
                                <option value="adventure">Adventure</option>
                            </select>
                            <button class="btn btn-primary" onclick="getTravelTips()"><i class="fas fa-info-circle"></i> Get Tips</button>
                        </div>
                    </div>
                </div>

                <!-- AI Results Area (The Output) -->
                <div id="ai-results-container" class="ai-results-container" style="display: none;"></div>
            </div>
        </div>
    </div>
</div>

<script>
// UPDATED SCRIPT
document.addEventListener('DOMContentLoaded', () => {
    // Fetch total stats for the logged-in user
    const loadStats = () => {
        // Fetch Itinerary Stats
        fetch('/itinerary/api/stats').then(res => res.json()).then(data => {
            if (data.success) {
                document.getElementById('itinerary-count').textContent = data.itineraryCount || 0;
                document.getElementById('upcoming-trips').textContent = data.upcomingCount || 0;
            }
        });

        // Fetch Booking Stats
        fetch('/booking/api/stats').then(res => res.json()).then(data => {
            if (data.success) {
                document.getElementById('booking-count').textContent = data.bookingCount || 0;
                document.getElementById('total-spent').textContent = `$${(data.totalSpent || 0).toLocaleString()}`;
            }
        });
    };

    // Fetch recent items for the dashboard lists
    const loadRecentData = () => {
        fetch('/itinerary/api/recent').then(res => res.json()).then(data => {
            const container = document.getElementById('recent-itineraries');
            if (data.success && data.itineraries.length) {
                container.innerHTML = data.itineraries.map(it => `<div class="list-item"><div><h4>${it.title}</h4><p>${it.destination}</p></div><a href="/itinerary/${it._id}" class="btn btn-sm btn-outline">View</a></div>`).join('');
            } else { container.innerHTML = '<p style="padding: 20px; text-align: center;">No recent itineraries found.</p>'; }
        });
        fetch('/booking/api/recent').then(res => res.json()).then(data => {
            const container = document.getElementById('recent-bookings');
            if (data.success && data.bookings.length) {
                container.innerHTML = data.bookings.map(b => `<div class="list-item"><div><h4>${b.bookingType} Booking</h4><p>${b.provider.name} - $${b.pricing.totalPrice}</p></div><a href="/booking/${b._id}" class="btn btn-sm btn-outline">View</a></div>`).join('');
            } else { container.innerHTML = '<p style="padding: 20px; text-align: center;">No recent bookings found.</p>'; }
        });
    };
    
    loadStats();
    loadRecentData();
});

// The AI assistant part of the script remains unchanged
const resultsContainer = document.getElementById('ai-results-container');
function showResultState(message, isError = false) {
    resultsContainer.style.display = 'block';
    resultsContainer.className = isError ? 'ai-results-container error-text' : 'ai-results-container loading-text';
    resultsContainer.innerHTML = `<h3>${message}</h3>`;
}
async function fetchAI(endpoint, body) {
    try {
        const response = await fetch(`/ai${endpoint}`, {
            method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body)
        });
        if (!response.ok) throw new Error(`Server responded with status: ${response.status}`);
        return await response.json();
    } catch (error) {
        console.error(`Error fetching ${endpoint}:`, error);
        showResultState('Could not connect to the AI service.', true);
        return null;
    }
}
async function getRecommendations() {
    showResultState('<i class="fas fa-spinner fa-spin"></i> Getting Recommendations...');
    const data = await fetchAI('/get-recommendations', { preferences: { travelStyle: "adventure" } });
    if (data && data.success) {
        let html = `<h3>Top Recommendations</h3>`;
        html += data.recommendations.topRecommendations.map(rec =>
            `<div class="result-item"><h4>${rec.destination}</h4><p>${rec.reasoning}</p></div>`
        ).join('');
        resultsContainer.className = 'ai-results-container'; resultsContainer.innerHTML = html;
    } else if (data) { showResultState('Could not generate recommendations.', true); }
}
async function predictCosts() {
    const destination = document.getElementById('cost-destination').value;
    const duration = document.getElementById('cost-duration').value;
    if (!destination || !duration) { alert('Please enter destination and duration.'); return; }
    showResultState('<i class="fas fa-spinner fa-spin"></i> Predicting Costs...');
    const data = await fetchAI('/predict-costs', { destination, duration, travelStyle: 'balanced' });
    if (data && data.success) {
        const cost = data.costPrediction;
        resultsContainer.className = 'ai-results-container';
        resultsContainer.innerHTML = `<h3>Cost Prediction for ${cost.destination}</h3><div class="result-item"><h4>Total Estimated Cost: $${cost.totalCost}</h4><p>Daily Average: $${cost.dailyBreakdown.total}</p></div>`;
    } else if (data) { showResultState('Could not predict costs.', true); }
}
async function getWeather() {
    const destination = document.getElementById('weather-destination').value;
    const date = document.getElementById('weather-date').value;
    if (!destination || !date) { alert('Please enter destination and date.'); return; }
    showResultState('<i class="fas fa-spinner fa-spin"></i> Getting Weather...');
    const data = await fetchAI('/get-weather-insights', { destination, travelDates: { start: date, end: date } });
    if (data && data.success) {
        const w = data.weatherInsights;
        resultsContainer.className = 'ai-results-container';
        resultsContainer.innerHTML = `<h3>Weather for ${w.destination}</h3><div class="result-item"><h4>${w.weatherForecast[0].conditions.description}</h4><p>Temperature: ${w.weatherForecast[0].temperature.low}° to ${w.weatherForecast[0].temperature.high}°</p></div><div class="result-item"><h4>Packing Tips:</h4><ul>${w.packingRecommendations.clothing.map(i => `<li>${i}</li>`).join('')}</ul></div>`;
    } else if (data) { showResultState('Could not get weather insights.', true); }
}
async function translateText() {
    const text = document.getElementById('translate-text').value;
    const lang = document.getElementById('translate-language').value;
    if (!text) { alert('Please enter text to translate.'); return; }
    showResultState('<i class="fas fa-spinner fa-spin"></i> Translating...');
    const data = await fetchAI('/translate', { text, targetLanguage: lang });
    if (data && data.success) {
        const t = data.translation;
        resultsContainer.className = 'ai-results-container';
        resultsContainer.innerHTML = `<h3>Translation to ${t.languageInfo.name}</h3><div class="result-item"><h4>${t.translatedText}</h4><p><em>(Original: ${t.originalText})</em></p></div>`;
    } else if (data) { showResultState('Could not translate text.', true); }
}
async function optimizeBudget() {
    const totalBudget = document.getElementById('budget-total').value;
    const duration = document.getElementById('budget-duration').value;
    const destination = document.getElementById('budget-destination').value;
    if (!totalBudget || !destination || !duration) { alert('Please fill all budget fields.'); return; }
    showResultState('<i class="fas fa-spinner fa-spin"></i> Optimizing Budget...');
    const data = await fetchAI('/optimize-budget', { totalBudget, destination, duration });
    if (data && data.success) {
        const opt = data.budgetOptimization;
        resultsContainer.className = 'ai-results-container';
        resultsContainer.innerHTML = `<h3>Budget Plan for ${opt.destination}</h3><div class="result-item"><h4>Daily Budget: $${opt.dailyBudget}</h4><ul><li>Accommodation: $${opt.categoryAllocation.accommodation}</li><li>Food: $${opt.categoryAllocation.food}</li><li>Activities: $${opt.categoryAllocation.activities}</li></ul></div>`;
    } else if (data) { showResultState('Could not optimize budget.', true); }
}
async function getTravelTips() {
    const destination = document.getElementById('tips-destination').value;
    const travelStyle = document.getElementById('tips-style').value;
    if (!destination) { alert('Please enter a destination.'); return; }
    showResultState('<i class="fas fa-spinner fa-spin"></i> Generating Tips...');
    const data = await fetchAI('/generate-travel-tips', { destination, travelStyle });
    if (data && data.success) {
        resultsContainer.className = 'ai-results-container';
        resultsContainer.innerHTML = `<h3>Travel Tips for ${destination}</h3><div class="result-item"><ul>${data.travelTips.map(tip => `<li>${tip}</li>`).join('')}</ul></div>`;
    } else if (data) { showResultState('Could not generate tips.', true); }
}
</script>